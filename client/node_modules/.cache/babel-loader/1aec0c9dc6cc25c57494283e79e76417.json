{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport reducer from './reducer';\nimport thunk from 'redux-thunk'; // Build the middleware for intercepting and dispatching navigation actions\n//const myRouterMiddleware = routerMiddleware(history);\n\nexport var store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));","map":{"version":3,"sources":["D:\\Projects\\playground\\playground-medium-clone\\client\\src\\redux\\store.js"],"names":["applyMiddleware","createStore","composeWithDevTools","reducer","thunk","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0CAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;AACA;;AAEA,OAAO,IAAMC,KAAK,GAAGJ,WAAW,CAC9BE,OAD8B,EACrBD,mBAAmB,CAACF,eAAe,CAACI,KAAD,CAAhB,CADE,CAAzB","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport reducer from './reducer';\r\nimport thunk from 'redux-thunk'\r\n\r\n// Build the middleware for intercepting and dispatching navigation actions\r\n//const myRouterMiddleware = routerMiddleware(history);\r\n\r\nexport const store = createStore(\r\n  reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n"]},"metadata":{},"sourceType":"module"}